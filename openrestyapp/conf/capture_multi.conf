# 流量复制

location /test1 {
    keepalive_timeout 60s;
    keepalive_requests 1000;
    content_by_lua '
        ngx.print("test1 : ", ngx.req.get_uri_args()["a"])
        ngx.log(ngx.INFO, "request test1")
    ';
}

location /test2 {
    keepalive_timeout 60s;
    keepalive_requests 1000;
    content_by_lua '
        ngx.print("test2 : ", ngx.req.get_uri_args()["a"])
        ngx.log(ngx.INFO, "request test2")
    ';
}

location /test {
    lua_socket_connect_timeout 3s;
    lua_socket_send_timeout 3s;
    lua_socket_read_timeout 3s;
    lua_socket_pool_size 100;
    lua_socket_keepalive_timeout 60s;
    lua_socket_buffer_size 8k;
    content_by_lua '
        local res1, res2 = ngx.location.capture_multi{
            { "/test1", { args = ngx.req.get_uri_args() } },
            { "/test2", { args = ngx.req.get_uri_args() } },
        }
        if res1.status == ngx.HTTP_OK then
            ngx.say(res1.body)
        end
        if res2.status ~= ngx.HTTP_OK then
           ngx.log(ngx.ERR, "capture dataflow to /test2, ret error code: ", res2.status)
        else
           ngx.say(res2.body)
        end
    ';
}
