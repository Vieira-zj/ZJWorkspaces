apiVersion: v1
kind: Pod
metadata:
  annotations:
    kubernetes.io/created-by: |
      {"kind":"SerializedReference","apiVersion":"v1","reference":{"kind":"ReplicaSet","namespace":"prophet","name":"telamon-6d67b9d6b5","uid":"868a8533-74d0-11ea-9b56-0894ef770d44","apiVersion":"extensions","resourceVersion":"161779408"}}
    kubernetes.io/limit-ranger: 'LimitRanger plugin set: cpu, memory request for init
      container download-hadoop-hadoop; cpu, memory limit for init container download-hadoop-hadoop'
  creationTimestamp: 2020-04-08T10:42:53Z
  generateName: telamon-6d67b9d6b5-
  labels:
    app: telamon
    pod-template-hash: "2823658261"
    prophet.4paradigm.com/deployment: telamon
    use-hadoop: "true"
  name: telamon-6d67b9d6b5-lqlv4
  namespace: prophet
  ownerReferences:
  - apiVersion: extensions/v1beta1
    blockOwnerDeletion: true
    controller: true
    kind: ReplicaSet
    name: telamon-6d67b9d6b5
    uid: 868a8533-74d0-11ea-9b56-0894ef770d44
  resourceVersion: "161779656"
  selfLink: /api/v1/namespaces/prophet/pods/telamon-6d67b9d6b5-lqlv4
  uid: b34d1d3c-7985-11ea-9b56-0894ef770d44

spec:
  automountServiceAccountToken: false
  containers:
  - env:
    - name: MY_POD_NAMESPACE
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: metadata.namespace
    - name: MY_NODE_NAME
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: spec.nodeName
    - name: MY_CPU_REQUEST
      valueFrom:
        resourceFieldRef:
          containerName: app
          divisor: "0"
          resource: requests.cpu
    - name: MY_CPU_LIMIT
      valueFrom:
        resourceFieldRef:
          containerName: app
          divisor: "0"
          resource: limits.cpu
    - name: MY_MEM_REQUEST
      valueFrom:
        resourceFieldRef:
          containerName: app
          divisor: "0"
          resource: requests.memory
    - name: MY_MEM_LIMIT
      valueFrom:
        resourceFieldRef:
          containerName: app
          divisor: "0"
          resource: limits.memory
    - name: PROPHET_VERSION
      value: 3.8.1.0
    - name: JAEGER_SERVICE_NAME
      value: telamon
    - name: TRACING_SERVLET_EXCLUDE
      value: /telamon/health,/telamon/info
    - name: ENDPOINTS_ENV_ENABLED
      value: "false"
    - name: GO_MYSQL_PARAMS
      value: loc=Local&charset=utf8mb4&parseTime=True&time_zone=%27%2B08%3A00%27&maxAllowedPacket=0
    - name: JAEGER_AGENT_HOST
      value: jaeger-agent
    - name: JAEGER_AGENT_PORT
      value: "6831"
    - name: JAEGER_SAMPLER_MANAGER_HOST_PORT
      value: jaeger-agent:5778/sampling
    - name: JAEGER_SAMPLER_TYPE
      value: remote
    - name: JAEGER_TAGS
      value: namespace=${MY_POD_NAMESPACE:}, node_name=${MY_NODE_NAME:}
    - name: JDBC_MYSQL_PARAMS
      value: connectionCollation=utf8mb4_unicode_ci&useSSL=false&sessionVariables=time_zone%3d'%2B08%3A00'
    - name: PROPHET_LANG
      value: zh-CN
    - name: TRACING_ENABLED
      value: "true"
    - name: TZ
      value: Asia/Shanghai
    - name: APP_PORT
      value: "80"
    - name: MY_POD_NAME
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: metadata.name
    - name: MY_POD_SERVICE_ACCOUNT
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: spec.serviceAccountName
    image: 172.25.203.50:35000/env/release/3.8.0/prophet/app/telamon.tar:pipe-1581-commit-5aca73a7
    imagePullPolicy: IfNotPresent
    livenessProbe:
      failureThreshold: 3
      httpGet:
        path: /telamon/health
        port: 80
        scheme: HTTP
      initialDelaySeconds: 60
      periodSeconds: 60
      successThreshold: 1
      timeoutSeconds: 1
    name: app
    ports:
    - containerPort: 80
      protocol: TCP
    readinessProbe:
      failureThreshold: 3
      httpGet:
        path: /telamon/health
        port: 80
        scheme: HTTP
      periodSeconds: 60
      successThreshold: 1
      timeoutSeconds: 1
    resources:
      limits:
        cpu: "3"
        memory: 16Gi
      requests:
        cpu: "3"
        memory: 16Gi
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /app/application-prod.yml
      name: telamon-configmap-0
      subPath: application-prod.yml
    - mountPath: /app/database.json
      name: telamon-configmap-1
      subPath: database.json
    - mountPath: /app/logs/telamon
      name: app-log-0
    - mountPath: /app/logs/access_log
      name: app-log-1
    - mountPath: /opt/hadoop
      name: hadoop-config-data

  dnsPolicy: ClusterFirst
  imagePullSecrets:
  - name: docker-secret

  initContainers:
  - command:
    - wget
    - -nHd
    - -m
    - -e
    - robots=off
    - -np
    - common-config-file-server/fake/
    image: 172.25.203.50:35000/base-image-common:1.0
    imagePullPolicy: IfNotPresent
    name: download-hadoop-hadoop
    resources:
      limits:
        cpu: 100m
        memory: 1024M
      requests:
        cpu: 100m
        memory: 1024M
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /data/target
      name: hadoop-config-data
    workingDir: /data/target

  nodeName: 172.25.203.35
  nodeSelector:
    prophet.4paradigm.com/system: "true"
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: default
  serviceAccountName: default
  terminationGracePeriodSeconds: 30

  volumes:
  - configMap:
      defaultMode: 420
      name: telamon-configmap-0
    name: telamon-configmap-0
  - configMap:
      defaultMode: 420
      name: telamon-configmap-1
    name: telamon-configmap-1
  - emptyDir: {}
    name: app-log-0
  - emptyDir: {}
    name: app-log-1
  - configMap:
      defaultMode: 420
      name: telamon-filebeat-config
    name: filebeat-config
  - emptyDir: {}
    name: hadoop-config-data

status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: 2020-04-08T10:42:54Z
    status: "True"
    type: Initialized
  - lastProbeTime: null
    lastTransitionTime: 2020-04-08T10:43:40Z
    status: "True"
    type: Ready
  - lastProbeTime: null
    lastTransitionTime: 2020-04-08T10:42:53Z
    status: "True"
    type: PodScheduled
  containerStatuses:
  - containerID: docker://0cde4f323555a7ee39fc58b6e92737d76b215635a6ad2360b45ac66a14057aac
    image: 172.25.203.50:35000/env/release/3.8.0/prophet/app/telamon.tar:pipe-1581-commit-5aca73a7
    imageID: docker-pullable://172.25.203.50:35000/env/release/3.8.0/prophet/app/telamon.tar@sha256:b5500ee51b537f024fa9b314a62547d7485828bb2a99255fe4446132d264e645
    lastState: {}
    name: app
    ready: true
    restartCount: 0
    state:
      running:
        startedAt: 2020-04-08T10:42:55Z
  hostIP: 172.25.203.35
  initContainerStatuses:
  - containerID: docker://5038a86b8a2deed1b52eb9d2b7ad3fd93018f59392e44ba7f15db801ad39c2b5
    image: 172.25.203.50:35000/base-image-common:1.0
    imageID: docker-pullable://172.25.203.50:35000/base-image-common@sha256:7364bceaaa57fabe340b0755382e1b8ff5631d4ee0ecfcd53333f05dcf64d7c9
    lastState: {}
    name: download-hadoop-hadoop
    ready: true
    restartCount: 0
    state:
      terminated:
        containerID: docker://5038a86b8a2deed1b52eb9d2b7ad3fd93018f59392e44ba7f15db801ad39c2b5
        exitCode: 0
        finishedAt: 2020-04-08T10:42:54Z
        reason: Completed
        startedAt: 2020-04-08T10:42:54Z
  phase: Running
  podIP: 10.244.9.4
  qosClass: Guaranteed
  startTime: 2020-04-08T10:42:53Z
